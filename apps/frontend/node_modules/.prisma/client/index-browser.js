
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.30.0
 * Query Engine version: b8c35d44de987a9691890b3ddf3e2e7effb9bf20
 */
Prisma.prismaVersion = {
  client: "2.30.0",
  engine: "b8c35d44de987a9691890b3ddf3e2e7effb9bf20"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.FileScalarFieldEnum = makeEnum({
  id: 'id',
  fileName: 'fileName',
  mimeType: 'mimeType',
  createdAt: 'createdAt',
  content: 'content',
  purchaseId: 'purchaseId'
});

exports.Prisma.BuyerScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name'
});

exports.Prisma.SellerScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  contactPerson: 'contactPerson'
});

exports.Prisma.CertificateScalarFieldEnum = makeEnum({
  id: 'id',
  generatorName: 'generatorName',
  generatorId: 'generatorId',
  country: 'country',
  energySource: 'energySource',
  generationStart: 'generationStart',
  generationEnd: 'generationEnd'
});

exports.Prisma.FilecoinNodeScalarFieldEnum = makeEnum({
  id: 'id',
  buyerId: 'buyerId'
});

exports.Prisma.PurchaseScalarFieldEnum = makeEnum({
  id: 'id',
  certificateId: 'certificateId',
  buyerId: 'buyerId',
  sellerId: 'sellerId',
  recsSold: 'recsSold',
  recsTransactions: 'recsTransactions'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});


exports.Prisma.ModelName = makeEnum({
  File: 'File',
  Buyer: 'Buyer',
  Seller: 'Seller',
  Certificate: 'Certificate',
  FilecoinNode: 'FilecoinNode',
  Purchase: 'Purchase'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
